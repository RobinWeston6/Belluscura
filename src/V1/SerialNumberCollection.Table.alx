table 56701 "SK2 Serial No. Collection"
{
    DataClassification = ToBeClassified;
    LookupPageId = "SK2 SN Collection List";
    DrillDownPageId = "SK2 SN Collection List";

    fields
    {
        field(1; "Item No."; Code[20])
        {
            Caption = 'Item No.';
            DataClassification = ToBeClassified;
            Editable = false;
            NotBlank = true;
        }
        field(2; SKU; Code[50])
        {
            Caption = 'SKU';
            DataClassification = ToBeClassified;
            Editable = false;
            NotBlank = true;
        }
        field(10; "Battery Item No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Battery Item No.';
        }
        field(11; "Battery Serial No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Battery Serial No.';
        }
        field(20; "Unit Item No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Unit Item No.';
        }
        field(21; "Unit Serial No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Unit Serial No.';
        }
        field(30; "Sieve Bed Item No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Sieve Bed Item No.';
        }
        field(31; "Sieve Bed Serial No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Sieve Bed Serial No.';
        }
        field(40; "Sieve Bed 2 Item No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Sieve Bed 2 Item No.';
        }
        field(41; "Sieve Bed 2 Serial No."; Code[50])
        {
            DataClassification = ToBeClassified;
            Caption = 'Sieve Bed 2 Serial No.';
        }
        field(160; "Send-to Document"; Enum "Sales Document Type")
        {
            DataClassification = ToBeClassified;
            Caption = 'Send-to Document';
        }
        field(161; "Send-to No."; Code[20])
        {
            DataClassification = ToBeClassified;
            Caption = 'Send-to No.';
        }
        field(170; "Source Assembly Document"; enum "Assembly Document Type")
        {
            DataClassification = ToBeClassified;
            Caption = 'Source Assembly Document Type';
        }
        field(171; "Source Assembly Doc. No."; Code[20])
        {
            DataClassification = ToBeClassified;
            Caption = 'Source Assembly Document No.';
        }
        field(180; "Active Assembly"; Boolean)
        {
            DataClassification = ToBeClassified;
            Caption = 'Active Assembly';
        }
    }

    keys
    {
        key(PK; "Item No.", SKU)
        {
            Clustered = true;
        }
    }

    trigger OnInsert()
    begin
        if SKU = '' then
            GenerateSKU();
    end;

    trigger OnDelete()
    var
        HasBeenMarkedAsInactiveErr: Label 'Assembly %1 cannot be deleted. It has been marked as Inactive.';
    begin
        if ("Send-to No." <> '') then begin
            "Active Assembly" := false;
            Rec.Modify();
            Error(HasBeenMarkedAsInactiveErr, SKU);
        end;
    end;

    var
        NoSeriesManagement: Codeunit NoSeriesManagement;

    procedure GenerateSKU()
    var
        BarcodeSetup: Record "SK2 Barcode Setup";
        Item: Record Item;
    begin
        Item.Get("Item No.");
        Item.TestField("SK2 SKU No. Series");
        SKU := NoSeriesManagement.GetNextNo(Item."SK2 SKU No. Series", WorkDate(), true);
    end;
}